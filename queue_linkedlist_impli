#include <iostream>

using namespace std;

//   ----- LINKED LIST IMPLEMENTATION OF QUEUE-------
   
 class node{
     public:
        int data;
        node*next;
        
     node(int val) {
         data =val;
         next = NULL;
     }  
 };
 
     class queue{
         node* front;
         node* back;
         
         public:
             queue(){
                 front = NULL;
                 back = NULL;
             }
             
           void push(int x){
               node* n=new node(x);
               if(front==NULL){
                   back=n;
                   front=n;
                   return;
               }
           back->next=n;
           back=n;
          }   
     }
    
    //  POP OPERATION----------------------
    
    if(front == NULL){
        cout<<"queue underflow"<<endl;
    }
    
    node* todelete = front;
    front= front->next;
    delete todelete;
   }
   
   int peek(){
       if(front== NULL){
           cout<<" no element in queue"<<endl;
           return -1;
       }
       return front->data;
   
   }
   
//   EMPTY OPERATION----------------------

   bool empty(){
       if(front==NULL){
           return true;
       }
       return false;
   }

int main()
{
    
    queue q;
    q.push(1);
    q.push(1);
    q.push(1);
    q.push(1);
    
    cout<<q.peek()<<endl;
    q.pop();
    
    cout<<q.peek()<<endl;
    q.pop();
    
    cout<<q.peek()<<endl;
    q.pop();
    cout<<q.peek()<<endl;
    q.pop();
    
    cout<<q.empty()<<endl;

    return 0;
}
